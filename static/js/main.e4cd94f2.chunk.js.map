{"version":3,"sources":["components/LiMusicComponents/ArtistInfo.jsx","components/LiMusicComponents/ButtonInfo.jsx","components/Portal.jsx","components/Modal.jsx","components/LiMusicComponents/ModalComponents/StatisticBlock.jsx","components/LiMusicComponents/ModalStatistic.jsx","components/LiMusic.jsx","components/TitleBar.jsx","App.js","serviceWorker.js","index.js"],"names":["ArtistInfo","props","className","src","item","artist","picture","alt","name","title","children","ButtonInfo","type","onClick","function","Portal","el","document","createElement","body","appendChild","this","removeChild","ReactDOM","createPortal","React","Component","Modal","isOpen","modal","closeWindow","StatisticBlock","style","paddingBottom","statisticInfo","ModalStatistic","album","cover","rank","LiMusic","useState","setIsOpen","controls","preview","TitleBar","width","App","tracks","setTracks","placeholder","onChange","event","a","async","fetch","target","value","response","json","data","console","log","undefined","length","map","key","id","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4cd94f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../../App.css\";\r\n\r\nexport default function ArtistInfo(props) {\r\n    return (\r\n        <div className=\"ArtistDiv\">\r\n            <img className=\"IconSong\" src={props.item.artist.picture} alt=\"Icon Artist\"/>\r\n            <h1 className=\"ArtistName\">{props.item.artist.name} - {props.item.title}</h1>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"../../App.css\";\r\n\r\nexport default function ButtonInfo(props) {\r\n    return (\r\n        <div className=\"ButtonDiv\">\r\n            <button className=\"Btn gradient\" type=\"button\" onClick={props.function}>Info</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class Portal extends React.Component {\r\n    el = document.createElement(\"div\");\r\n    \r\n    componentDidMount() {\r\n        document.body.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.el)\r\n    }    \r\n}","import React from 'react';\r\nimport Portal from './Portal';\r\nimport '../App.css';\r\n\r\nexport default class Modal extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Portal>\r\n                {this.props.isOpen && \r\n                    <>\r\n                        <div className=\"ModalOverlay\">\r\n                            <div className=\"ModalWindow\">\r\n                                <div className=\"ModalHeader\">\r\n                                    <h1 className=\"ModalHeaderH1\">{this.props.modal.artist.name} - {this.props.modal.title}</h1>\r\n                                    <button className=\"BtnModal gradient\" type=\"button\" onClick={this.props.closeWindow}>&#10148;</button>\r\n                                </div>\r\n                                <div className=\"ModalBody\">\r\n                                    {this.props.children}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Portal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"../../../App.css\";\r\n\r\nexport default function StatisticBlock(props) {\r\n    return (\r\n        <div className=\"Statistic\">\r\n            <h1 style={{ paddingBottom: \"20px\" }} className=\"StatisticTitle\">{props.statisticInfo} - {props.item}</h1>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport StatictisBlock from './ModalComponents/StatisticBlock';\r\nimport \"../../App.css\";\r\n\r\nexport default function ModalStatistic(props) {\r\n    return (\r\n        <Modal isOpen={props.isOpen} closeWindow={props.function} modal={props.item}>\r\n            <div className=\"Flex\">\r\n                <StatictisBlock statisticInfo=\"Album\" item={props.item.album.title}>\r\n                    <img className=\"IconSong\" src={props.item.album.cover} alt=\"Album\"/>\r\n                </StatictisBlock>\r\n                <StatictisBlock statisticInfo=\"Rank\" item={props.item.type}>\r\n                    <h1 className=\"RankH1\">{props.item.rank}</h1>\r\n                </StatictisBlock>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport \"../App.css\";\r\nimport ArtistInfo from './LiMusicComponents/ArtistInfo';\r\nimport ButtonInfo from './LiMusicComponents/ButtonInfo';\r\nimport ModalStatistic from './LiMusicComponents/ModalStatistic';\r\n\r\nfunction LiMusic(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    return (\r\n        <li className=\"LiMusic\">\r\n            <ArtistInfo item={props.item}>\r\n                <audio className=\"Audio\" controls>\r\n                    <source src={props.item.preview} type=\"audio/mpeg\" />\r\n                </audio>\r\n            </ArtistInfo>\r\n            <ButtonInfo function={() => setIsOpen(true)} />\r\n            <ModalStatistic item={props.item} isOpen={isOpen} function={() => setIsOpen(false)}/>\r\n        </li>\r\n    );   \r\n}\r\n\r\nexport default LiMusic;","import React from 'react';\r\n\r\nexport default function TitleBar(props) {\r\n    return (\r\n        <table className=\"TitleBar\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img src=\"icon.svg\" width=\"124\" alt=\"ICON\" />\r\n                    </td>\r\n                    <td>\r\n                        <h1>{props.title}</h1>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n      </table>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport LiMusic from './components/LiMusic';\nimport TitleBar from './components/TitleBar';\n\nfunction App() {\n  const [tracks, setTracks] = useState([]);\n  const handleChange = async (event) => {\n    let response = await fetch(`https://deezerdevs-deezer.p.rapidapi.com/search?q=${event.target.value}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"93e08c48damshd4f9f756737ac3fp157a43jsn59014a1c5cdf\"\n      }\n    })\n    let data = await response.json();\n    console.log(data.data)\n    setTracks(data.data);\n  }\n  return (\n    <>\n      <TitleBar title=\"Music Search\"/>\n      <input type=\"text\" placeholder=\"Input artist\" onChange={handleChange} className=\"SearchTrack\"/>\n      <ul className=\"UlMusic\">\n        {(tracks === undefined || !tracks.length) \n          ? <div className=\"DivInput\">\n              <h1 className=\"H1Input\">Input Track...</h1>\n            </div> \n          : tracks.map((item) => {\n              return (\n                  <LiMusic key={item.id} item={item} />\n              )\n        })}\n      </ul>\n    </>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}